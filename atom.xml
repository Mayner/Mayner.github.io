<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mayner&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/1e4d984d6da30ace22c49eb2e5a6eb08</icon>
  <subtitle>Web前端技术沉淀</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mayner.github.io/"/>
  <updated>2018-04-23T06:04:23.035Z</updated>
  <id>https://mayner.github.io/</id>
  
  <author>
    <name>Mayner</name>
    <email>meiningzhu@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nvm安装过程总结</title>
    <link href="https://mayner.github.io/2018/04/20/nvm%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/"/>
    <id>https://mayner.github.io/2018/04/20/nvm安装过程总结/</id>
    <published>2018-04-20T10:11:27.000Z</published>
    <updated>2018-04-23T06:04:23.035Z</updated>
    
    <content type="html"><![CDATA[<p>一直以来都在用 nvm 来管理我的 node 的版本，然而，最近在尝试入坑快应用时，使用 <code>npm install -g hap-toolkit</code> 安装快应用脚手架，接着查看版本号检测是否安装成功，输入 <code>hap -V</code> ，结果显示： <code>&#39;hap&#39; 不是内部或外部命令，也不是可运行的程序或批处理文件。</code>但进到 <code>hap-toolkit</code> 目录下运行 <code>hap -V</code> ，结果正常，想着应该是环境变量没配好，就试了一下安装别的工具，果然也出现同样的问题，捣鼓了一番环境变量，还是不行。最后决定卸载nvm重新安装，于是便开始了 nvm 的安装填坑之路。此文旨在记录本人安装 nvm 的过程以及在安装过程中遇到的一点小问题。</p><h2 id="nvm的作用"><a href="#nvm的作用" class="headerlink" title="nvm的作用"></a>nvm的作用</h2><p>nvm 是 node 的版本管理工具，它能帮助你快速安装并切换使用node的版本，为什么要切换node的版本？因为各种工具使用的 node 版本可能不一致，就会出现一些奇怪的问题。比如：快应用，就需要安装6.0以上版本，官方推荐使用的是 node v6.11.3，还强调不要使用8.0.*版本，因为这个版本内部 ZipStream 实现与 node-archive 包不兼容，会引起报错。也就是说，我们在平常工作中经常会碰到使用不同 node 版本，而每次切换版本挺麻烦还耗时，你要先卸载掉当前已经安装使用的 node 版本，然后重新下载安装需要的那个版本，这个过程是繁琐的；而且为了某些功能而去反复卸载下载安装不同的 node 版本，这是非常不划算的，nvm 就是专门解决这个问题的工具。</p><h2 id="nvm的下载安装"><a href="#nvm的下载安装" class="headerlink" title="nvm的下载安装"></a>nvm的下载安装</h2><p>1.下载地址：<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">nvm的下载地址</a>（如果你已经单独安装了node，建议先卸载）。<br>2.我选择的是1.1.5版本里 <code>nvm-setup.zip</code> 这个安装包。<br>3.解压后双击安装，此处注意以下两点：  </p><img src="/2018/04/20/nvm安装过程总结/1.png" title="This is an example image">  <p>在选择安装目录这一步的时候我选的是默认路径，记住这一步骤的路径，因为之后使用nvm安装的 node 版本都会存放在该目录下，安装完后里面有个 settings.txt 文件，之后配置环境变量的时候有用。  </p><img src="/2018/04/20/nvm安装过程总结/2.png" title="This is an example image">  <p>接着到 <code>Set Node.js Symlink</code> 这一步，这里的目录是之后 <code>nvm use</code> 你使用的那个 node 版本程序的存放目录。我这里选的是 <code>C:\dev\nodejs</code> 。其他步骤都按默认的走，一路next直到安装完成。  </p><p>4.打开命令行窗口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nvm v   // 查看nvm版本 1.1.5</span><br><span class="line">nvm install latest  // 下载node最新版 v9.11.1</span><br><span class="line">nvm install 8.11.1  // 下载node稳定版 v8.11.1</span><br><span class="line">nvm install 6.11.3  // 下载指定版本</span><br></pre></td></tr></table></figure></p><p>下载对应的 node 版本后会在 nvm 的安装目录下生成对应的版本文件夹（即上述所说的 <code>C:\Users\ab052479\AppData\Roaming\nvm</code>），在命令行输入 <code>nvm list</code> 可以看到下载的 node 版本及当前使用的版本是 6.11.3 ，再输入 <code>nvm use 8.11.1</code> 切换使用 node v8.11.1 版本，此时再 <code>nvm list</code> 可以看到当前使用的版本已经变成 8.11.1 。这时就会在 <code>C:\dev</code> 的目录出现个 nodejs 文件夹的快捷方式。  </p><img src="/2018/04/20/nvm安装过程总结/4.png" title="This is an example image">  <h2 id="npm的全局安装路径配置"><a href="#npm的全局安装路径配置" class="headerlink" title="npm的全局安装路径配置"></a>npm的全局安装路径配置</h2><p>执行命令:  </p><pre><code>npm config set prefix &quot;C:\dev\node\npm-global&quot;</code></pre><p>C:\Users\你的用户名\ 会生成个 .npmrc 文件，内容如下：<br><code>prefix=C:\dev\node\npm-global</code><br>这时候再去安装全局的东西，比如 <code>npm install -g hap-toolkit</code> ，所有全局的包都会出现在 <code>C:\dev\node\npm-global\node_modules</code> 目录中。  </p><h2 id="环境变量的配置"><a href="#环境变量的配置" class="headerlink" title="环境变量的配置"></a>环境变量的配置</h2><p>打开环境变量配置窗口的路径：此电脑右键 → 属性 → 高级系统设置 → 环境变量。  </p><img src="/2018/04/20/nvm安装过程总结/5.png" title="This is an example image"><ul><li>用户变量<br><code>NVM_HOME</code> 的值设成 <code>C:\dev\node\npm-global</code> ， <code>NVM_SYMLINK</code> 的值设成 <code>C:\dev\nodejs</code>, <code>path</code> 需要有 <code>%NVM_HOME%</code> 和 <code>%NVM_SYMLINK%</code> 。  </li></ul><img src="/2018/04/20/nvm安装过程总结/6.png" title="This is an example image"><ul><li>系统变量<br><code>NVM_HOME</code> 的值设成 <code>C:\dev\node\npm-global</code> ， <code>NVM_SYMLINK</code> 的值设成 <code>C:\dev\nodejs</code>, <code>path</code> 需要有 <code>%NVM_HOME%</code> 和 <code>%NVM_SYMLINK%</code> 。<br>在 <code>path</code>的最后再配上一条 <code>C:\Users\ab052479\AppData\Roaming\nvm</code> ，这样就可以全局使用 nvm 了。<br>然而，当我在D盘某个项目里打开命令行使用 nvm 操作时，报错了：<br><code>ERROR open C:\dev\node\npm-global\settings.txt: The system cannot find the file specified.</code><br>不过别慌，人家已经给你报出是什么原因了：该路径下找不到 settings.txt 这个文件。<br>这时，你只需要去 nvm 的安装路径 <code>C:\Users\ab052479\AppData\Roaming\nvm</code> 下把 settings.txt 文件复制到 <code>C:\dev\node\npm-global</code> 就行了（记得关掉命令行窗口重新开一个再试）。  </li></ul><img src="/2018/04/20/nvm安装过程总结/7.png" title="This is an example image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直以来都在用 nvm 来管理我的 node 的版本，然而，最近在尝试入坑快应用时，使用 &lt;code&gt;npm install -g hap-toolkit&lt;/code&gt; 安装快应用脚手架，接着查看版本号检测是否安装成功，输入 &lt;code&gt;hap -V&lt;/code&gt; ，结果显
      
    
    </summary>
    
    
      <category term="nvm" scheme="https://mayner.github.io/tags/nvm/"/>
    
      <category term="win10" scheme="https://mayner.github.io/tags/win10/"/>
    
      <category term="node.js" scheme="https://mayner.github.io/tags/node-js/"/>
    
  </entry>
  
</feed>
